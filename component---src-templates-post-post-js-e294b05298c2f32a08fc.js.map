{"version":3,"sources":["webpack:///./src/templates/Post/Post.module.css","webpack:///./src/templates/Post/Post.js"],"names":["module","exports","BlogPost","data","pageContext","post","markdownRemark","previous","next","title","frontmatter","description","excerpt","className","postStyles","article","backgroundColor","image","fluid","childImageSharp","img","alt","name","grid","header","date","passage","dangerouslySetInnerHTML","__html","html","nav","left","button","to","fields","slug","arrow","prev","right","pageQuery"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,KAAO,2BAA2B,OAAS,6BAA6B,IAAM,0BAA0B,MAAQ,4BAA4B,KAAO,2BAA2B,QAAU,8BAA8B,IAAM,0BAA0B,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,6BAA6B,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,wNCoE1dC,UA1DE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClBC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOJ,EAAKK,YAAYD,MAAOE,YAAaN,EAAKO,UACtD,6BAASC,UAAWC,IAAWC,SAC7B,kBAAC,IAAD,CACEC,kBAAmBX,EAAKK,YAAYO,MACpCC,MAAOb,EAAKK,YAAYO,MAAME,gBAAgBD,MAC9CL,UAAWC,IAAWM,IACtBC,IACEhB,EAAKK,YAAYO,MACbZ,EAAKK,YAAYO,MAAMK,KACvB,mBAGR,6BAAST,UAAWC,IAAWS,MAC7B,4BAAQV,UAAWC,IAAWU,QAC5B,wBAAIX,UAAWC,IAAWL,OAAQJ,EAAKK,YAAYD,OACnD,uBAAGI,UAAWC,IAAWW,MAAOpB,EAAKK,YAAYe,OAEnD,8BAGF,6BAASZ,UAAWC,IAAWS,MAC7B,yBACEV,UAAWC,IAAWY,QACtBC,wBAAyB,CAAEC,OAAQvB,EAAKwB,QAG1C,yBAAKhB,UAAWC,IAAWgB,KACzB,yBAAKjB,UAAWC,IAAWiB,MACxBxB,GACC,kBAAC,OAAD,CAAMM,UAAWC,IAAWkB,OAAQC,GAAI1B,EAAS2B,OAAOC,MACtD,0BAAMtB,WAAYC,IAAWsB,MAAOtB,IAAWuB,OAC5C9B,EAASG,YAAYD,SAK9B,yBAAKI,UAAWC,IAAWwB,OACxB9B,GACC,kBAAC,OAAD,CAAMK,UAAWC,IAAWkB,OAAQC,GAAIzB,EAAK0B,OAAOC,MAClD,0BAAMtB,WAAYC,IAAWsB,MAAOtB,IAAWN,OAC5CA,EAAKE,YAAYD,cAc/B,IAAM8B,EAAS,a","file":"component---src-templates-post-post-js-e294b05298c2f32a08fc.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Post-module--article--1OWF8\",\"grid\":\"Post-module--grid--239xQ\",\"header\":\"Post-module--header--3bBWj\",\"img\":\"Post-module--img--h5W4i\",\"title\":\"Post-module--title--7tlEK\",\"date\":\"Post-module--date--1uCBT\",\"passage\":\"Post-module--passage--1gLP0\",\"nav\":\"Post-module--nav--3gwJ9\",\"left\":\"Post-module--left--3WkxX\",\"right\":\"Post-module--right--1ERWj\",\"button\":\"Post-module--button--39RuZ\",\"arrow\":\"Post-module--arrow--3aR1_\",\"prev\":\"Post-module--prev--BHr9s\",\"next\":\"Post-module--next--BnvP9\"};","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport postStyles from './Post.module.css'\n// eslint-disable-next-line\nimport { fluidImageBg } from '../../utils/ImageQuery'\nimport 'katex/dist/katex.min.css'\n\nconst BlogPost = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n  // console.log(previous, next);\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <article className={postStyles.article}>\n        <Img\n          backgroundColor={!!post.frontmatter.image}\n          fluid={post.frontmatter.image.childImageSharp.fluid}\n          className={postStyles.img}\n          alt={\n            post.frontmatter.image\n              ? post.frontmatter.image.name\n              : 'background img'\n          }\n        />\n        <section className={postStyles.grid}>\n          <header className={postStyles.header}>\n            <h1 className={postStyles.title}>{post.frontmatter.title}</h1>\n            <p className={postStyles.date}>{post.frontmatter.date}</p>\n          </header>\n          <hr />\n        </section>\n\n        <section className={postStyles.grid}>\n          <div\n            className={postStyles.passage}\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <nav className={postStyles.nav}>\n            <div className={postStyles.left}>\n              {previous && (\n                <Link className={postStyles.button} to={previous.fields.slug}>\n                  <span className={(postStyles.arrow, postStyles.prev)}>\n                    {previous.frontmatter.title}\n                  </span>\n                </Link>\n              )}\n            </div>\n            <div className={postStyles.right}>\n              {next && (\n                <Link className={postStyles.button} to={next.fields.slug}>\n                  <span className={(postStyles.arrow, postStyles.next)}>\n                    {next.frontmatter.title}\n                  </span>\n                </Link>\n              )}\n            </div>\n          </nav>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        image {\n          ...fluidImageBg\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}