{"version":3,"sources":["webpack:///./src/components/PostPreview/PostPreview.module.css","webpack:///./src/pages/index.js","webpack:///./src/components/PostPreview/PostPreview.js","webpack:///./src/components/PostPreview/index.js"],"names":["module","exports","IndexPage","data","posts","allMarkdownRemark","edges","siteMetadata","site","title","style","width","height","fluid","bgImg","childImageSharp","alt","position","top","left","right","margin","padding","color","textTransform","textShadow","textAlign","fontWeight","letterSpacing","sloganHome","display","flexWrap","map","post","node","key","id","pageQuery","PostPreview","showExcerpt","showButton","className","postPreviewStyles","container","entry","to","fields","slug","date","frontmatter","excerpt","button","arrow","PostPreviewByYear","year","postsInYear","yearPostsContainer","postPreviewWrapper"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,uCAAuC,MAAQ,mCAAmC,KAAO,kCAAkC,MAAQ,mCAAmC,QAAU,qCAAqC,OAAS,oCAAoC,MAAQ,mCAAmC,mBAAqB,gDAAgD,KAAO,kCAAkC,mBAAqB,kD,kCCD9c,6IA6EeC,UAnEG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACJC,EAAUD,EAAKE,kBAAtBC,MACAC,EAAiBJ,EAAKK,KAAtBD,aACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,SACX,iCACE,kBAAC,IAAD,CACEC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,MAAOV,EAAKW,MAAMC,gBAAgBF,MAClCG,IAAI,iCAEN,yBACEN,MAAO,CACLO,SAAU,WACVC,IAAK,MACLC,KAAM,IACNC,MAAO,IACPT,MAAO,OACPU,OAAQ,OACRC,QAAS,WAGX,yBACEZ,MAAO,CACLa,MAAO,QACPC,cAAe,YACfC,WAAY,iBACZH,QAAS,WAGX,wBACEZ,MAAO,CACLgB,UAAW,SACXC,WAAY,IACZC,cAAe,WAGhBrB,EAAasB,WAPhB,MASA,wBACEnB,MAAO,CACLgB,UAAW,SACXH,MAAO,UACPK,cAAe,WAGhBrB,EAAaE,UAKtB,6BACEC,MAAO,CACLW,OAAQ,SACRS,QAAS,OACTC,SAAU,SAGX3B,EAAM4B,KAAI,YAAqB,IAAZC,EAAW,EAAjBC,KACZ,OAAO,kBAAC,IAAD,CAAaC,IAAKF,EAAKG,GAAIF,KAAMD,UAS3C,IAAMI,EAAS,Y,8HC3EhBC,EAAc,SAAC,GAA2D,IAAnDL,EAAkD,EAAxDC,KAAwD,IAA5CK,mBAA4C,aAAxBC,kBAAwB,SAC7E,OACE,yBAAKC,UAAWC,IAAkBC,WAChC,kBAAC,OAAD,CAAMF,UAAWC,IAAkBE,MAAOC,GAAIZ,EAAKa,OAAOC,MACxD,0BAAMN,UAAWC,IAAkBM,MAAOf,EAAKgB,YAAYD,MAC3D,wBAAIP,UAAWC,IAAkBjC,OAAQwB,EAAKgB,YAAYxC,OACzD8B,GACC,uBAAGE,UAAWC,IAAkBQ,SAAUjB,EAAKiB,UAGlDV,GACC,kBAAC,OAAD,CAAMC,UAAWC,IAAkBS,OAAQN,GAAIZ,EAAKa,OAAOC,MACzD,0BAAMN,UAAWC,IAAkBU,OAAnC,WAOJC,EAAoB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAA6B,IAAvBC,mBAAuB,MAAT,GAAS,EACxD,OACE,6BAASd,UAAWC,IAAkBc,oBACpC,wBAAIf,UAAWC,IAAkBY,MAAOA,GACvCC,EACCA,EAAYvB,KAAI,SAAAC,GAAI,OAClB,yBACEE,IAAKF,EAAKC,KAAKE,GACfK,UAAWC,IAAkBe,oBAE7B,kBAAC,EAAD,CACEtB,IAAKF,EAAKC,KAAKE,GACfF,KAAMD,EAAKC,KACXK,aAAa,QAKnB,oCAMOD,IC7CAA","file":"component---src-pages-index-js-7081158b455f9cb649d5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostPreview-module--container--JGFew\",\"entry\":\"PostPreview-module--entry--B3Rmo\",\"date\":\"PostPreview-module--date--1f3sI\",\"title\":\"PostPreview-module--title--2aI37\",\"excerpt\":\"PostPreview-module--excerpt--3FBNg\",\"button\":\"PostPreview-module--button--HnC_e\",\"arrow\":\"PostPreview-module--arrow--1djkn\",\"yearPostsContainer\":\"PostPreview-module--yearPostsContainer--1PDOV\",\"year\":\"PostPreview-module--year--1-wrE\",\"postPreviewWrapper\":\"PostPreview-module--postPreviewWrapper--1ItuR\"};","import React from 'react'\nimport Img from 'gatsby-image'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport PostPreview from '../components/PostPreview'\n// eslint-disable-next-line\nimport { fluidImageBg } from '../utils/ImageQuery'\n\nconst IndexPage = ({ data }) => {\n  const { edges: posts } = data.allMarkdownRemark\n  const { siteMetadata } = data.site\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <section>\n        <Img\n          style={{ width: '100%', height: '80vh' }}\n          fluid={data.bgImg.childImageSharp.fluid}\n          alt=\"paul-volkmer-638816-unsplash\"\n        />\n        <div\n          style={{\n            position: 'absolute',\n            top: '35%',\n            left: '0',\n            right: '0',\n            width: '100%',\n            margin: 'auto',\n            padding: '0 2rem',\n          }}\n        >\n          <div\n            style={{\n              color: 'white',\n              textTransform: 'uppercase',\n              textShadow: '1px 1px 0 #011',\n              padding: '0 2rem',\n            }}\n          >\n            <h2\n              style={{\n                textAlign: 'center',\n                fontWeight: 400,\n                letterSpacing: '0.2rem',\n              }}\n            >\n              {siteMetadata.sloganHome} -\n            </h2>\n            <h4\n              style={{\n                textAlign: 'center',\n                color: '#d45c54',\n                letterSpacing: '0.1rem',\n              }}\n            >\n              {siteMetadata.title}\n            </h4>\n          </div>\n        </div>\n      </section>\n      <section\n        style={{\n          margin: '0 auto',\n          display: 'flex',\n          flexWrap: 'wrap',\n        }}\n      >\n        {posts.map(({ node: post }) => {\n          return <PostPreview key={post.id} node={post} />\n        })}\n      </section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        sloganHome\n      }\n    }\n    bgImg: file(relativePath: { eq: \"paul-volkmer-638816-unsplash.jpg\" }) {\n      ...fluidImageBg\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport postPreviewStyles from './PostPreview.module.css';\n\nconst PostPreview = ({ node: post, showExcerpt = true, showButton = true }) => {\n  return (\n    <div className={postPreviewStyles.container}>\n      <Link className={postPreviewStyles.entry} to={post.fields.slug}>\n        <span className={postPreviewStyles.date}>{post.frontmatter.date}</span>\n        <h3 className={postPreviewStyles.title}>{post.frontmatter.title}</h3>\n        {showExcerpt && (\n          <p className={postPreviewStyles.excerpt}>{post.excerpt}</p>\n        )}\n      </Link>\n      {showButton && (\n        <Link className={postPreviewStyles.button} to={post.fields.slug}>\n          <span className={postPreviewStyles.arrow}>Read</span>\n        </Link>\n      )}\n    </div>\n  );\n};\n\nconst PostPreviewByYear = ({ year, postsInYear = [] }) => {\n  return (\n    <section className={postPreviewStyles.yearPostsContainer}>\n      <h1 className={postPreviewStyles.year}>{year}</h1>\n      {postsInYear ? (\n        postsInYear.map(post => (\n          <div\n            key={post.node.id}\n            className={postPreviewStyles.postPreviewWrapper}\n          >\n            <PostPreview\n              key={post.node.id}\n              node={post.node}\n              showExcerpt={false}\n            />\n          </div>\n        ))\n      ) : (\n        <h2>暂无</h2>\n      )}\n    </section>\n  );\n};\n\nexport default PostPreview;\nexport { PostPreviewByYear };\n","import PostPreview, { PostPreviewByYear } from './PostPreview';\n\nexport default PostPreview;\nexport { PostPreviewByYear };\n"],"sourceRoot":""}