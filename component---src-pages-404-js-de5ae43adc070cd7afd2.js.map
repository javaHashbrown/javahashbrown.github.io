{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Header","props","_this","_React$Component","call","this","toggleNav","setState","showNav","state","react_default","className","headerStyles","header","gatsby_browser_entry","logo__link","to","siteTitle","toggle","onClick","nav","nav__mobile","nav__item","nav__link","nav__desktop","React","Component","Layout","children","Fragment","components_Header","style","margin","width","paddingTop","_755544856"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,0PCJJ,SAASE,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUN,EAASE,EAATF,MAChD,OACEO,EAAAT,EAAAC,cAACS,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJV,GAAeS,EAAKE,KAAKC,aAAaZ,YACxC,OACEI,EAAAT,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdb,QAEFJ,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CK,KAAM,CACJ,CACEc,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASpB,GAEX,CACEmB,KAAI,sBACJC,QAASP,IAGVU,OACCjB,EAASkB,OAAS,EACd,CACEL,KAAI,WACJC,QAASd,EAASmB,KAAT,OAEX,IAELF,OAAOlB,MAtDlBO,KAAAc,IA8DJzB,EAAI0B,aAAe,CACjBvB,KAAI,KACJC,KAAM,GACNC,SAAU,IAWGL,MAEf,IAAMS,EAAY,6PChFZkB,sBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAKFC,UAAY,WACVJ,EAAKK,SAAS,CACZC,SAAUN,EAAKO,MAAMD,WANvBN,EAAKO,MAAQ,CACXD,SAAS,GAHMN,4GAYnBnB,OAAA,WAAS,IACCyB,EAAYH,KAAKI,MAAjBD,QACR,OACEE,EAAAxC,EAAAC,cAAA,UAAQwC,UAAWC,IAAaC,QAC9BH,EAAAxC,EAAAC,cAAA,WACEuC,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAMH,UAAWC,IAAaG,WAAYC,GAAG,KAC1CX,KAAKJ,MAAMgB,YAGhBP,EAAAxC,EAAAC,cAAA,OAAKwC,UAAWC,IAAaM,OAAQC,QAASd,KAAKC,WAAnD,KAIAI,EAAAxC,EAAAC,cAAA,OAAKwC,UAAWC,IAAaQ,KAC1BZ,GACCE,EAAAxC,EAAAC,cAAA,MAAIwC,UAAWC,IAAaS,aAC1BX,EAAAxC,EAAAC,cAAA,MAAIwC,UAAWC,IAAaU,WAC1BZ,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAME,GAAG,IAAIL,UAAWC,IAAaW,WAArC,SAIFb,EAAAxC,EAAAC,cAAA,MAAIwC,UAAWC,IAAaU,WAC1BZ,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAME,GAAG,QAAQL,UAAWC,IAAaW,WAAzC,SAIFb,EAAAxC,EAAAC,cAAA,MAAIwC,UAAWC,IAAaU,WAC1BZ,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAME,GAAG,aAAaL,UAAWC,IAAaW,WAA9C,eAMNb,EAAAxC,EAAAC,cAAA,OAAKwC,UAAWC,IAAaY,cAC3Bd,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAME,GAAG,IAAIL,UAAWC,IAAaW,WAArC,QAGAb,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAME,GAAG,QAAQL,UAAWC,IAAaW,WAAzC,QAGAb,EAAAxC,EAAAC,cAAC2C,EAAA,KAAD,CAAME,GAAG,aAAaL,UAAWC,IAAaW,WAA9C,oBArDSE,IAAMC,WAmE3B1B,EAAOD,aAAe,CACpBkB,UAAW,IAGEjB,IC1EAA,ED0EAA,SEpCA2B,IAjCA,SAAArD,GAAA,IAAGsD,EAAHtD,EAAGsD,SAAH,OACblB,EAAAxC,EAAAC,cAAC2C,EAAA,YAAD,CACEjC,MAAK,YASLE,OAAQ,SAAAC,GAAI,OACV0B,EAAAxC,EAAAC,cAAAuC,EAAAxC,EAAA2D,SAAA,KACEnB,EAAAxC,EAAAC,cAAC2D,EAAD,CAAQb,UAAWjC,EAAKE,KAAKC,aAAaf,QAE1CsC,EAAAxC,EAAAC,cAAA,OACE4D,MAAO,CACLC,OAAQ,SACRC,MAAO,OACPC,WAAY,IAGbN,KArBT5C,KAAAmD","file":"component---src-pages-404-js-de5ae43adc070cd7afd2.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport headerStyles from './Header.module.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNav: false\n    };\n  }\n  toggleNav = () => {\n    this.setState({\n      showNav: !this.state.showNav\n    });\n  };\n\n  render() {\n    const { showNav } = this.state;\n    return (\n      <header className={headerStyles.header}>\n        <div>\n          <Link className={headerStyles.logo__link} to=\"/\">\n            {this.props.siteTitle}\n          </Link>\n        </div>\n        <div className={headerStyles.toggle} onClick={this.toggleNav}>\n          &#9776;\n        </div>\n\n        <nav className={headerStyles.nav}>\n          {showNav && (\n            <ul className={headerStyles.nav__mobile}>\n              <li className={headerStyles.nav__item}>\n                <Link to=\"/\" className={headerStyles.nav__link}>\n                  home\n                </Link>\n              </li>\n              <li className={headerStyles.nav__item}>\n                <Link to=\"/Blog\" className={headerStyles.nav__link}>\n                  blog\n                </Link>\n              </li>\n              <li className={headerStyles.nav__item}>\n                <Link to=\"/Portfolio\" className={headerStyles.nav__link}>\n                  portfolio\n                </Link>\n              </li>\n            </ul>\n          )}\n          <div className={headerStyles.nav__desktop}>\n            <Link to=\"/\" className={headerStyles.nav__link}>\n              home\n            </Link>\n            <Link to=\"/Blog\" className={headerStyles.nav__link}>\n              blog\n            </Link>\n            <Link to=\"/Portfolio\" className={headerStyles.nav__link}>\n              portfolio\n            </Link>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  siteTitle: ''\n};\n\nexport default Header;\n","import Header from './Header'\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './Header'\nimport '../global-styles.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n\n        <div\n          style={{\n            margin: '0 auto',\n            width: '100%',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}