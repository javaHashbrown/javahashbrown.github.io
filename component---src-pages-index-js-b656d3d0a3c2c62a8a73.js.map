{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_PostPreview__WEBPACK_IMPORTED_MODULE_4__","IndexPage","_ref","data","posts","allMarkdownRemark","edges","a","createElement","title","style","width","height","fluid","bgImg","childImageSharp","alt","position","top","left","right","margin","padding","color","textTransform","textShadow","textAlign","fontWeight","letterSpacing","display","flexWrap","map","_ref2","post","node","key","id"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAA,EAAA,KA4Eea,UAlEG,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACJC,EAAUD,EAAKE,kBAAtBC,MACR,OACEZ,EAAAa,EAAAC,cAACV,EAAA,EAAD,KACEJ,EAAAa,EAAAC,cAACT,EAAA,EAAD,CAAKU,MAAM,SACXf,EAAAa,EAAAC,cAAA,eACEd,EAAAa,EAAAC,cAACX,EAAAU,EAAD,CACEG,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,MAAOV,EAAKW,MAAMC,gBAAgBF,MAClCG,IAAI,iCAENtB,EAAAa,EAAAC,cAAA,OACEE,MAAO,CACLO,SAAU,WACVC,IAAK,MACLC,KAAM,IACNC,MAAO,IACPT,MAAO,OACPU,OAAQ,OACRC,QAAS,WAGX5B,EAAAa,EAAAC,cAAA,OACEE,MAAO,CACLa,MAAO,QACPC,cAAe,YACfC,WAAY,iBACZH,QAAS,WAGX5B,EAAAa,EAAAC,cAAA,MACEE,MAAO,CACLgB,UAAW,SACXC,WAAY,IACZC,cAAe,WAJnB,oCASAlC,EAAAa,EAAAC,cAAA,MACEE,MAAO,CACLgB,UAAW,SACXH,MAAO,UACPK,cAAe,WAJnB,8BAYNlC,EAAAa,EAAAC,cAAA,WACEE,MAAO,CACLW,OAAQ,SACRQ,QAAS,OACTC,SAAU,SAGX1B,EAAM2B,IAAI,SAAAC,GAAoB,IAAXC,EAAWD,EAAjBE,KACZ,OAAOxC,EAAAa,EAAAC,cAACR,EAAA,EAAD,CAAamC,IAAKF,EAAKG,GAAIF,KAAMD,SAS3C,IAAMzC,EAAS","file":"component---src-pages-index-js-b656d3d0a3c2c62a8a73.js","sourcesContent":["import React from 'react'\r\nimport Img from 'gatsby-image'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport PostPreview from '../components/PostPreview'\r\n// eslint-disable-next-line\r\nimport { fluidImageBg } from '../utils/ImageQuery'\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const { edges: posts } = data.allMarkdownRemark\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <section>\r\n        <Img\r\n          style={{ width: '100%', height: '80vh' }}\r\n          fluid={data.bgImg.childImageSharp.fluid}\r\n          alt=\"paul-volkmer-638816-unsplash\"\r\n        />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: '35%',\r\n            left: '0',\r\n            right: '0',\r\n            width: '100%',\r\n            margin: 'auto',\r\n            padding: '0 2rem',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              color: 'white',\r\n              textTransform: 'uppercase',\r\n              textShadow: '1px 1px 0 #011',\r\n              padding: '0 2rem',\r\n            }}\r\n          >\r\n            <h2\r\n              style={{\r\n                textAlign: 'center',\r\n                fontWeight: 400,\r\n                letterSpacing: '0.2rem',\r\n              }}\r\n            >\r\n              Thoughts die but codes survive -\r\n            </h2>\r\n            <h4\r\n              style={{\r\n                textAlign: 'center',\r\n                color: '#d45c54',\r\n                letterSpacing: '0.1rem',\r\n              }}\r\n            >\r\n              welcom to alex's midway\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section\r\n        style={{\r\n          margin: '0 auto',\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        {posts.map(({ node: post }) => {\r\n          return <PostPreview key={post.id} node={post} />\r\n        })}\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    bgImg: file(relativePath: { eq: \"paul-volkmer-638816-unsplash.jpg\" }) {\r\n      ...fluidImageBg\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          id\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}